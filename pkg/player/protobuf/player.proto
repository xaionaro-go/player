syntax = "proto3";
package player;
option go_package = "github.com/xaionaro-go/player/pkg/player/protobuf/go/player_grpc";

service Player {
	rpc Open(OpenRequest) returns (OpenReply) {}
    rpc SetupForStreaming(SetupForStreamingRequest) returns (SetupForStreamingReply) {}
    rpc ProcessTitle(ProcessTitleRequest) returns (ProcessTitleReply) {}
	rpc GetLink(GetLinkRequest) returns (GetLinkReply) {}
	rpc EndChan(EndChanRequest) returns (stream EndChanReply) {}
	rpc IsEnded(IsEndedRequest) returns (IsEndedReply) {}
	rpc GetPosition(GetPositionRequest) returns (GetPositionReply) {}
	rpc GetLength(GetLengthRequest) returns (GetLengthReply) {}
	rpc GetSpeed(GetSpeedRequest) returns (GetSpeedReply) {}
	rpc SetSpeed(SetSpeedRequest) returns (SetSpeedReply) {}
	rpc GetPause(GetPauseRequest) returns (GetPauseReply) {}
	rpc SetPause(SetPauseRequest) returns (SetPauseReply) {}
	rpc Seek(SeekRequest) returns (SeekReply) {}
	rpc GetVideoTracks(GetVideoTracksRequest) returns (GetVideoTracksReply) {}
	rpc GetAudioTracks(GetAudioTracksRequest) returns (GetAudioTracksReply) {}
	rpc GetSubtitlesTracks(GetSubtitlesTracksRequest) returns (GetSubtitlesTracksReply) {}
	rpc SetVideoTrack(SetVideoTrackRequest) returns (SetVideoTrackReply) {}
	rpc SetAudioTrack(SetAudioTrackRequest) returns (SetAudioTrackReply) {}
	rpc SetSubtitlesTrack(SetSubtitlesTrackRequest) returns (SetSubtitlesTrackReply) {}
	rpc Stop(StopRequest) returns (StopReply) {}
	rpc Close(CloseRequest) returns (CloseReply) {}
}

enum LoggingLevel {
	LoggingLevelNone = 0;
	LoggingLevelFatal = 1;
	LoggingLevelPanic = 2;
	LoggingLevelError = 3;
	LoggingLevelWarn = 4;
	LoggingLevelInfo = 5;
	LoggingLevelDebug = 6;
	LoggingLevelTrace = 7;
}

message SetupForStreamingRequest {}
message SetupForStreamingReply {}

message ProcessTitleRequest {}
message ProcessTitleReply {
    string title = 1;
}
message OpenRequest {
    string link = 1;
    string title = 2;
	LoggingLevel loggingLevel = 3;
}
message OpenReply {}
message GetLinkRequest {}
message GetLinkReply {
	string link = 1;
}
message EndChanRequest {}
message EndChanReply {}
message IsEndedRequest {}
message IsEndedReply {
	bool isEnded = 1;
}
message GetPositionRequest {}
message GetPositionReply {
	double positionSecs = 1;
}
message GetLengthRequest {}
message GetLengthReply {
	double lengthSecs = 1;
}
message GetSpeedRequest {}
message GetSpeedReply {
	double speed = 1;
}
message SetSpeedRequest {
    double speed = 1;
}
message SetSpeedReply {}
message GetPauseRequest {}
message GetPauseReply {
	bool isPaused = 1;
}
message SetPauseRequest {
    bool isPaused = 1;
}
message SetPauseReply {}
message SetVideoTrackRequest {
    int64 videoTrackID = 1;
}
message SetVideoTrackReply {}
message SetAudioTrackRequest {
    int64 audioTrackID = 1;
}
message SetAudioTrackReply {}
message SetSubtitlesTrackRequest {
    int64 subtitlesTrackID = 1;
}
message SetSubtitlesTrackReply {}
message VideoTrack {
	int64 id = 1;
	bool isActive = 2;
}
message SeekRequest {
	int64 pos = 1;
	bool isRelative = 2;
	bool isQuick = 3;
}
message SeekReply {}
message GetVideoTracksRequest {}
message GetVideoTracksReply {
	repeated VideoTrack videoTrack = 1;
}
message AudioTrack {
	int64 id = 1;
	bool isActive = 2;
}
message GetAudioTracksRequest {}
message GetAudioTracksReply {
	repeated AudioTrack audioTrack = 1;
}
message SubtitlesTrack {
	int64 id = 1;
	bool isActive = 2;
}
message GetSubtitlesTracksRequest {}
message GetSubtitlesTracksReply {
	repeated SubtitlesTrack subtitlesTrack = 1;
}
message StopRequest {}
message StopReply {}
message CloseRequest {}
message CloseReply {}
