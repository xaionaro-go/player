// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.proto

#include "player.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace player {
PROTOBUF_CONSTEXPR SetupForStreamingRequest::SetupForStreamingRequest(
    ::_pbi::ConstantInitialized) {}
struct SetupForStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetupForStreamingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetupForStreamingRequestDefaultTypeInternal() {}
  union {
    SetupForStreamingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetupForStreamingRequestDefaultTypeInternal _SetupForStreamingRequest_default_instance_;
PROTOBUF_CONSTEXPR SetupForStreamingReply::SetupForStreamingReply(
    ::_pbi::ConstantInitialized) {}
struct SetupForStreamingReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetupForStreamingReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetupForStreamingReplyDefaultTypeInternal() {}
  union {
    SetupForStreamingReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetupForStreamingReplyDefaultTypeInternal _SetupForStreamingReply_default_instance_;
PROTOBUF_CONSTEXPR ProcessTitleRequest::ProcessTitleRequest(
    ::_pbi::ConstantInitialized) {}
struct ProcessTitleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProcessTitleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProcessTitleRequestDefaultTypeInternal() {}
  union {
    ProcessTitleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProcessTitleRequestDefaultTypeInternal _ProcessTitleRequest_default_instance_;
PROTOBUF_CONSTEXPR ProcessTitleReply::ProcessTitleReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProcessTitleReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProcessTitleReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProcessTitleReplyDefaultTypeInternal() {}
  union {
    ProcessTitleReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProcessTitleReplyDefaultTypeInternal _ProcessTitleReply_default_instance_;
PROTOBUF_CONSTEXPR OpenRequest::OpenRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.link_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.logginglevel_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OpenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenRequestDefaultTypeInternal() {}
  union {
    OpenRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenRequestDefaultTypeInternal _OpenRequest_default_instance_;
PROTOBUF_CONSTEXPR OpenReply::OpenReply(
    ::_pbi::ConstantInitialized) {}
struct OpenReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenReplyDefaultTypeInternal() {}
  union {
    OpenReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenReplyDefaultTypeInternal _OpenReply_default_instance_;
PROTOBUF_CONSTEXPR GetLinkRequest::GetLinkRequest(
    ::_pbi::ConstantInitialized) {}
struct GetLinkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLinkRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLinkRequestDefaultTypeInternal() {}
  union {
    GetLinkRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLinkRequestDefaultTypeInternal _GetLinkRequest_default_instance_;
PROTOBUF_CONSTEXPR GetLinkReply::GetLinkReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.link_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLinkReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLinkReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLinkReplyDefaultTypeInternal() {}
  union {
    GetLinkReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLinkReplyDefaultTypeInternal _GetLinkReply_default_instance_;
PROTOBUF_CONSTEXPR EndChanRequest::EndChanRequest(
    ::_pbi::ConstantInitialized) {}
struct EndChanRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EndChanRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EndChanRequestDefaultTypeInternal() {}
  union {
    EndChanRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EndChanRequestDefaultTypeInternal _EndChanRequest_default_instance_;
PROTOBUF_CONSTEXPR EndChanReply::EndChanReply(
    ::_pbi::ConstantInitialized) {}
struct EndChanReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EndChanReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EndChanReplyDefaultTypeInternal() {}
  union {
    EndChanReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EndChanReplyDefaultTypeInternal _EndChanReply_default_instance_;
PROTOBUF_CONSTEXPR IsEndedRequest::IsEndedRequest(
    ::_pbi::ConstantInitialized) {}
struct IsEndedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsEndedRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsEndedRequestDefaultTypeInternal() {}
  union {
    IsEndedRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsEndedRequestDefaultTypeInternal _IsEndedRequest_default_instance_;
PROTOBUF_CONSTEXPR IsEndedReply::IsEndedReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.isended_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct IsEndedReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsEndedReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsEndedReplyDefaultTypeInternal() {}
  union {
    IsEndedReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsEndedReplyDefaultTypeInternal _IsEndedReply_default_instance_;
PROTOBUF_CONSTEXPR GetPositionRequest::GetPositionRequest(
    ::_pbi::ConstantInitialized) {}
struct GetPositionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionRequestDefaultTypeInternal() {}
  union {
    GetPositionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionRequestDefaultTypeInternal _GetPositionRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPositionReply::GetPositionReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.positionsecs_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPositionReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionReplyDefaultTypeInternal() {}
  union {
    GetPositionReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionReplyDefaultTypeInternal _GetPositionReply_default_instance_;
PROTOBUF_CONSTEXPR GetLengthRequest::GetLengthRequest(
    ::_pbi::ConstantInitialized) {}
struct GetLengthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLengthRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLengthRequestDefaultTypeInternal() {}
  union {
    GetLengthRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLengthRequestDefaultTypeInternal _GetLengthRequest_default_instance_;
PROTOBUF_CONSTEXPR GetLengthReply::GetLengthReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.lengthsecs_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLengthReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLengthReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLengthReplyDefaultTypeInternal() {}
  union {
    GetLengthReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLengthReplyDefaultTypeInternal _GetLengthReply_default_instance_;
PROTOBUF_CONSTEXPR GetSpeedRequest::GetSpeedRequest(
    ::_pbi::ConstantInitialized) {}
struct GetSpeedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSpeedRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSpeedRequestDefaultTypeInternal() {}
  union {
    GetSpeedRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSpeedRequestDefaultTypeInternal _GetSpeedRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSpeedReply::GetSpeedReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.speed_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSpeedReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSpeedReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSpeedReplyDefaultTypeInternal() {}
  union {
    GetSpeedReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSpeedReplyDefaultTypeInternal _GetSpeedReply_default_instance_;
PROTOBUF_CONSTEXPR SetSpeedRequest::SetSpeedRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.speed_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetSpeedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetSpeedRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetSpeedRequestDefaultTypeInternal() {}
  union {
    SetSpeedRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetSpeedRequestDefaultTypeInternal _SetSpeedRequest_default_instance_;
PROTOBUF_CONSTEXPR SetSpeedReply::SetSpeedReply(
    ::_pbi::ConstantInitialized) {}
struct SetSpeedReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetSpeedReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetSpeedReplyDefaultTypeInternal() {}
  union {
    SetSpeedReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetSpeedReplyDefaultTypeInternal _SetSpeedReply_default_instance_;
PROTOBUF_CONSTEXPR GetPauseRequest::GetPauseRequest(
    ::_pbi::ConstantInitialized) {}
struct GetPauseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPauseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPauseRequestDefaultTypeInternal() {}
  union {
    GetPauseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPauseRequestDefaultTypeInternal _GetPauseRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPauseReply::GetPauseReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ispaused_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPauseReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPauseReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPauseReplyDefaultTypeInternal() {}
  union {
    GetPauseReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPauseReplyDefaultTypeInternal _GetPauseReply_default_instance_;
PROTOBUF_CONSTEXPR SetPauseRequest::SetPauseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ispaused_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetPauseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPauseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPauseRequestDefaultTypeInternal() {}
  union {
    SetPauseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPauseRequestDefaultTypeInternal _SetPauseRequest_default_instance_;
PROTOBUF_CONSTEXPR SetPauseReply::SetPauseReply(
    ::_pbi::ConstantInitialized) {}
struct SetPauseReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPauseReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPauseReplyDefaultTypeInternal() {}
  union {
    SetPauseReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPauseReplyDefaultTypeInternal _SetPauseReply_default_instance_;
PROTOBUF_CONSTEXPR SetVideoTrackRequest::SetVideoTrackRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.videotrackid_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetVideoTrackRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVideoTrackRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVideoTrackRequestDefaultTypeInternal() {}
  union {
    SetVideoTrackRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVideoTrackRequestDefaultTypeInternal _SetVideoTrackRequest_default_instance_;
PROTOBUF_CONSTEXPR SetVideoTrackReply::SetVideoTrackReply(
    ::_pbi::ConstantInitialized) {}
struct SetVideoTrackReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVideoTrackReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVideoTrackReplyDefaultTypeInternal() {}
  union {
    SetVideoTrackReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVideoTrackReplyDefaultTypeInternal _SetVideoTrackReply_default_instance_;
PROTOBUF_CONSTEXPR SetAudioTrackRequest::SetAudioTrackRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.audiotrackid_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetAudioTrackRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAudioTrackRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAudioTrackRequestDefaultTypeInternal() {}
  union {
    SetAudioTrackRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAudioTrackRequestDefaultTypeInternal _SetAudioTrackRequest_default_instance_;
PROTOBUF_CONSTEXPR SetAudioTrackReply::SetAudioTrackReply(
    ::_pbi::ConstantInitialized) {}
struct SetAudioTrackReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAudioTrackReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAudioTrackReplyDefaultTypeInternal() {}
  union {
    SetAudioTrackReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAudioTrackReplyDefaultTypeInternal _SetAudioTrackReply_default_instance_;
PROTOBUF_CONSTEXPR SetSubtitlesTrackRequest::SetSubtitlesTrackRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.subtitlestrackid_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetSubtitlesTrackRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetSubtitlesTrackRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetSubtitlesTrackRequestDefaultTypeInternal() {}
  union {
    SetSubtitlesTrackRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetSubtitlesTrackRequestDefaultTypeInternal _SetSubtitlesTrackRequest_default_instance_;
PROTOBUF_CONSTEXPR SetSubtitlesTrackReply::SetSubtitlesTrackReply(
    ::_pbi::ConstantInitialized) {}
struct SetSubtitlesTrackReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetSubtitlesTrackReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetSubtitlesTrackReplyDefaultTypeInternal() {}
  union {
    SetSubtitlesTrackReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetSubtitlesTrackReplyDefaultTypeInternal _SetSubtitlesTrackReply_default_instance_;
PROTOBUF_CONSTEXPR VideoTrack::VideoTrack(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_.isactive_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VideoTrackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoTrackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoTrackDefaultTypeInternal() {}
  union {
    VideoTrack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoTrackDefaultTypeInternal _VideoTrack_default_instance_;
PROTOBUF_CONSTEXPR SeekRequest::SeekRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pos_)*/int64_t{0}
  , /*decltype(_impl_.isrelative_)*/false
  , /*decltype(_impl_.isquick_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SeekRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeekRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeekRequestDefaultTypeInternal() {}
  union {
    SeekRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeekRequestDefaultTypeInternal _SeekRequest_default_instance_;
PROTOBUF_CONSTEXPR SeekReply::SeekReply(
    ::_pbi::ConstantInitialized) {}
struct SeekReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeekReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeekReplyDefaultTypeInternal() {}
  union {
    SeekReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeekReplyDefaultTypeInternal _SeekReply_default_instance_;
PROTOBUF_CONSTEXPR GetVideoTracksRequest::GetVideoTracksRequest(
    ::_pbi::ConstantInitialized) {}
struct GetVideoTracksRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVideoTracksRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVideoTracksRequestDefaultTypeInternal() {}
  union {
    GetVideoTracksRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVideoTracksRequestDefaultTypeInternal _GetVideoTracksRequest_default_instance_;
PROTOBUF_CONSTEXPR GetVideoTracksReply::GetVideoTracksReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.videotrack_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetVideoTracksReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVideoTracksReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVideoTracksReplyDefaultTypeInternal() {}
  union {
    GetVideoTracksReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVideoTracksReplyDefaultTypeInternal _GetVideoTracksReply_default_instance_;
PROTOBUF_CONSTEXPR AudioTrack::AudioTrack(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_.isactive_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AudioTrackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioTrackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioTrackDefaultTypeInternal() {}
  union {
    AudioTrack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioTrackDefaultTypeInternal _AudioTrack_default_instance_;
PROTOBUF_CONSTEXPR GetAudioTracksRequest::GetAudioTracksRequest(
    ::_pbi::ConstantInitialized) {}
struct GetAudioTracksRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAudioTracksRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAudioTracksRequestDefaultTypeInternal() {}
  union {
    GetAudioTracksRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAudioTracksRequestDefaultTypeInternal _GetAudioTracksRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAudioTracksReply::GetAudioTracksReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.audiotrack_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAudioTracksReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAudioTracksReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAudioTracksReplyDefaultTypeInternal() {}
  union {
    GetAudioTracksReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAudioTracksReplyDefaultTypeInternal _GetAudioTracksReply_default_instance_;
PROTOBUF_CONSTEXPR SubtitlesTrack::SubtitlesTrack(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_.isactive_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SubtitlesTrackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubtitlesTrackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubtitlesTrackDefaultTypeInternal() {}
  union {
    SubtitlesTrack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubtitlesTrackDefaultTypeInternal _SubtitlesTrack_default_instance_;
PROTOBUF_CONSTEXPR GetSubtitlesTracksRequest::GetSubtitlesTracksRequest(
    ::_pbi::ConstantInitialized) {}
struct GetSubtitlesTracksRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSubtitlesTracksRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSubtitlesTracksRequestDefaultTypeInternal() {}
  union {
    GetSubtitlesTracksRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSubtitlesTracksRequestDefaultTypeInternal _GetSubtitlesTracksRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSubtitlesTracksReply::GetSubtitlesTracksReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.subtitlestrack_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSubtitlesTracksReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSubtitlesTracksReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSubtitlesTracksReplyDefaultTypeInternal() {}
  union {
    GetSubtitlesTracksReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSubtitlesTracksReplyDefaultTypeInternal _GetSubtitlesTracksReply_default_instance_;
PROTOBUF_CONSTEXPR StopRequest::StopRequest(
    ::_pbi::ConstantInitialized) {}
struct StopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopRequestDefaultTypeInternal() {}
  union {
    StopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopRequestDefaultTypeInternal _StopRequest_default_instance_;
PROTOBUF_CONSTEXPR StopReply::StopReply(
    ::_pbi::ConstantInitialized) {}
struct StopReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopReplyDefaultTypeInternal() {}
  union {
    StopReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopReplyDefaultTypeInternal _StopReply_default_instance_;
PROTOBUF_CONSTEXPR CloseRequest::CloseRequest(
    ::_pbi::ConstantInitialized) {}
struct CloseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseRequestDefaultTypeInternal() {}
  union {
    CloseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseRequestDefaultTypeInternal _CloseRequest_default_instance_;
PROTOBUF_CONSTEXPR CloseReply::CloseReply(
    ::_pbi::ConstantInitialized) {}
struct CloseReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseReplyDefaultTypeInternal() {}
  union {
    CloseReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseReplyDefaultTypeInternal _CloseReply_default_instance_;
}  // namespace player
static ::_pb::Metadata file_level_metadata_player_2eproto[45];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_player_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_player_2eproto = nullptr;

const uint32_t TableStruct_player_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetupForStreamingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetupForStreamingReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::ProcessTitleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::ProcessTitleReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::ProcessTitleReply, _impl_.title_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::OpenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::OpenRequest, _impl_.link_),
  PROTOBUF_FIELD_OFFSET(::player::OpenRequest, _impl_.title_),
  PROTOBUF_FIELD_OFFSET(::player::OpenRequest, _impl_.logginglevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::OpenReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetLinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetLinkReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::GetLinkReply, _impl_.link_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::EndChanRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::EndChanReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::IsEndedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::IsEndedReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::IsEndedReply, _impl_.isended_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetPositionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetPositionReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::GetPositionReply, _impl_.positionsecs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetLengthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetLengthReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::GetLengthReply, _impl_.lengthsecs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetSpeedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetSpeedReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::GetSpeedReply, _impl_.speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetSpeedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::SetSpeedRequest, _impl_.speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetSpeedReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetPauseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetPauseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::GetPauseReply, _impl_.ispaused_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetPauseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::SetPauseRequest, _impl_.ispaused_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetPauseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetVideoTrackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::SetVideoTrackRequest, _impl_.videotrackid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetVideoTrackReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetAudioTrackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::SetAudioTrackRequest, _impl_.audiotrackid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetAudioTrackReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetSubtitlesTrackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::SetSubtitlesTrackRequest, _impl_.subtitlestrackid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SetSubtitlesTrackReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::VideoTrack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::VideoTrack, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::player::VideoTrack, _impl_.isactive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SeekRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::SeekRequest, _impl_.pos_),
  PROTOBUF_FIELD_OFFSET(::player::SeekRequest, _impl_.isrelative_),
  PROTOBUF_FIELD_OFFSET(::player::SeekRequest, _impl_.isquick_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SeekReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetVideoTracksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetVideoTracksReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::GetVideoTracksReply, _impl_.videotrack_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::AudioTrack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::AudioTrack, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::player::AudioTrack, _impl_.isactive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetAudioTracksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetAudioTracksReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::GetAudioTracksReply, _impl_.audiotrack_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::SubtitlesTrack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::SubtitlesTrack, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::player::SubtitlesTrack, _impl_.isactive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetSubtitlesTracksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::GetSubtitlesTracksReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::player::GetSubtitlesTracksReply, _impl_.subtitlestrack_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::StopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::StopReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::CloseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::player::CloseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::player::SetupForStreamingRequest)},
  { 6, -1, -1, sizeof(::player::SetupForStreamingReply)},
  { 12, -1, -1, sizeof(::player::ProcessTitleRequest)},
  { 18, -1, -1, sizeof(::player::ProcessTitleReply)},
  { 25, -1, -1, sizeof(::player::OpenRequest)},
  { 34, -1, -1, sizeof(::player::OpenReply)},
  { 40, -1, -1, sizeof(::player::GetLinkRequest)},
  { 46, -1, -1, sizeof(::player::GetLinkReply)},
  { 53, -1, -1, sizeof(::player::EndChanRequest)},
  { 59, -1, -1, sizeof(::player::EndChanReply)},
  { 65, -1, -1, sizeof(::player::IsEndedRequest)},
  { 71, -1, -1, sizeof(::player::IsEndedReply)},
  { 78, -1, -1, sizeof(::player::GetPositionRequest)},
  { 84, -1, -1, sizeof(::player::GetPositionReply)},
  { 91, -1, -1, sizeof(::player::GetLengthRequest)},
  { 97, -1, -1, sizeof(::player::GetLengthReply)},
  { 104, -1, -1, sizeof(::player::GetSpeedRequest)},
  { 110, -1, -1, sizeof(::player::GetSpeedReply)},
  { 117, -1, -1, sizeof(::player::SetSpeedRequest)},
  { 124, -1, -1, sizeof(::player::SetSpeedReply)},
  { 130, -1, -1, sizeof(::player::GetPauseRequest)},
  { 136, -1, -1, sizeof(::player::GetPauseReply)},
  { 143, -1, -1, sizeof(::player::SetPauseRequest)},
  { 150, -1, -1, sizeof(::player::SetPauseReply)},
  { 156, -1, -1, sizeof(::player::SetVideoTrackRequest)},
  { 163, -1, -1, sizeof(::player::SetVideoTrackReply)},
  { 169, -1, -1, sizeof(::player::SetAudioTrackRequest)},
  { 176, -1, -1, sizeof(::player::SetAudioTrackReply)},
  { 182, -1, -1, sizeof(::player::SetSubtitlesTrackRequest)},
  { 189, -1, -1, sizeof(::player::SetSubtitlesTrackReply)},
  { 195, -1, -1, sizeof(::player::VideoTrack)},
  { 203, -1, -1, sizeof(::player::SeekRequest)},
  { 212, -1, -1, sizeof(::player::SeekReply)},
  { 218, -1, -1, sizeof(::player::GetVideoTracksRequest)},
  { 224, -1, -1, sizeof(::player::GetVideoTracksReply)},
  { 231, -1, -1, sizeof(::player::AudioTrack)},
  { 239, -1, -1, sizeof(::player::GetAudioTracksRequest)},
  { 245, -1, -1, sizeof(::player::GetAudioTracksReply)},
  { 252, -1, -1, sizeof(::player::SubtitlesTrack)},
  { 260, -1, -1, sizeof(::player::GetSubtitlesTracksRequest)},
  { 266, -1, -1, sizeof(::player::GetSubtitlesTracksReply)},
  { 273, -1, -1, sizeof(::player::StopRequest)},
  { 279, -1, -1, sizeof(::player::StopReply)},
  { 285, -1, -1, sizeof(::player::CloseRequest)},
  { 291, -1, -1, sizeof(::player::CloseReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::player::_SetupForStreamingRequest_default_instance_._instance,
  &::player::_SetupForStreamingReply_default_instance_._instance,
  &::player::_ProcessTitleRequest_default_instance_._instance,
  &::player::_ProcessTitleReply_default_instance_._instance,
  &::player::_OpenRequest_default_instance_._instance,
  &::player::_OpenReply_default_instance_._instance,
  &::player::_GetLinkRequest_default_instance_._instance,
  &::player::_GetLinkReply_default_instance_._instance,
  &::player::_EndChanRequest_default_instance_._instance,
  &::player::_EndChanReply_default_instance_._instance,
  &::player::_IsEndedRequest_default_instance_._instance,
  &::player::_IsEndedReply_default_instance_._instance,
  &::player::_GetPositionRequest_default_instance_._instance,
  &::player::_GetPositionReply_default_instance_._instance,
  &::player::_GetLengthRequest_default_instance_._instance,
  &::player::_GetLengthReply_default_instance_._instance,
  &::player::_GetSpeedRequest_default_instance_._instance,
  &::player::_GetSpeedReply_default_instance_._instance,
  &::player::_SetSpeedRequest_default_instance_._instance,
  &::player::_SetSpeedReply_default_instance_._instance,
  &::player::_GetPauseRequest_default_instance_._instance,
  &::player::_GetPauseReply_default_instance_._instance,
  &::player::_SetPauseRequest_default_instance_._instance,
  &::player::_SetPauseReply_default_instance_._instance,
  &::player::_SetVideoTrackRequest_default_instance_._instance,
  &::player::_SetVideoTrackReply_default_instance_._instance,
  &::player::_SetAudioTrackRequest_default_instance_._instance,
  &::player::_SetAudioTrackReply_default_instance_._instance,
  &::player::_SetSubtitlesTrackRequest_default_instance_._instance,
  &::player::_SetSubtitlesTrackReply_default_instance_._instance,
  &::player::_VideoTrack_default_instance_._instance,
  &::player::_SeekRequest_default_instance_._instance,
  &::player::_SeekReply_default_instance_._instance,
  &::player::_GetVideoTracksRequest_default_instance_._instance,
  &::player::_GetVideoTracksReply_default_instance_._instance,
  &::player::_AudioTrack_default_instance_._instance,
  &::player::_GetAudioTracksRequest_default_instance_._instance,
  &::player::_GetAudioTracksReply_default_instance_._instance,
  &::player::_SubtitlesTrack_default_instance_._instance,
  &::player::_GetSubtitlesTracksRequest_default_instance_._instance,
  &::player::_GetSubtitlesTracksReply_default_instance_._instance,
  &::player::_StopRequest_default_instance_._instance,
  &::player::_StopReply_default_instance_._instance,
  &::player::_CloseRequest_default_instance_._instance,
  &::player::_CloseReply_default_instance_._instance,
};

const char descriptor_table_protodef_player_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014player.proto\022\006player\"\032\n\030SetupForStream"
  "ingRequest\"\030\n\026SetupForStreamingReply\"\025\n\023"
  "ProcessTitleRequest\"\"\n\021ProcessTitleReply"
  "\022\r\n\005title\030\001 \001(\t\"V\n\013OpenRequest\022\014\n\004link\030\001"
  " \001(\t\022\r\n\005title\030\002 \001(\t\022*\n\014loggingLevel\030\003 \001("
  "\0162\024.player.LoggingLevel\"\013\n\tOpenReply\"\020\n\016"
  "GetLinkRequest\"\034\n\014GetLinkReply\022\014\n\004link\030\001"
  " \001(\t\"\020\n\016EndChanRequest\"\016\n\014EndChanReply\"\020"
  "\n\016IsEndedRequest\"\037\n\014IsEndedReply\022\017\n\007isEn"
  "ded\030\001 \001(\010\"\024\n\022GetPositionRequest\"(\n\020GetPo"
  "sitionReply\022\024\n\014positionSecs\030\001 \001(\001\"\022\n\020Get"
  "LengthRequest\"$\n\016GetLengthReply\022\022\n\nlengt"
  "hSecs\030\001 \001(\001\"\021\n\017GetSpeedRequest\"\036\n\rGetSpe"
  "edReply\022\r\n\005speed\030\001 \001(\001\" \n\017SetSpeedReques"
  "t\022\r\n\005speed\030\001 \001(\001\"\017\n\rSetSpeedReply\"\021\n\017Get"
  "PauseRequest\"!\n\rGetPauseReply\022\020\n\010isPause"
  "d\030\001 \001(\010\"#\n\017SetPauseRequest\022\020\n\010isPaused\030\001"
  " \001(\010\"\017\n\rSetPauseReply\",\n\024SetVideoTrackRe"
  "quest\022\024\n\014videoTrackID\030\001 \001(\003\"\024\n\022SetVideoT"
  "rackReply\",\n\024SetAudioTrackRequest\022\024\n\014aud"
  "ioTrackID\030\001 \001(\003\"\024\n\022SetAudioTrackReply\"4\n"
  "\030SetSubtitlesTrackRequest\022\030\n\020subtitlesTr"
  "ackID\030\001 \001(\003\"\030\n\026SetSubtitlesTrackReply\"*\n"
  "\nVideoTrack\022\n\n\002id\030\001 \001(\003\022\020\n\010isActive\030\002 \001("
  "\010\"\?\n\013SeekRequest\022\013\n\003pos\030\001 \001(\003\022\022\n\nisRelat"
  "ive\030\002 \001(\010\022\017\n\007isQuick\030\003 \001(\010\"\013\n\tSeekReply\""
  "\027\n\025GetVideoTracksRequest\"=\n\023GetVideoTrac"
  "ksReply\022&\n\nvideoTrack\030\001 \003(\0132\022.player.Vid"
  "eoTrack\"*\n\nAudioTrack\022\n\n\002id\030\001 \001(\003\022\020\n\010isA"
  "ctive\030\002 \001(\010\"\027\n\025GetAudioTracksRequest\"=\n\023"
  "GetAudioTracksReply\022&\n\naudioTrack\030\001 \003(\0132"
  "\022.player.AudioTrack\".\n\016SubtitlesTrack\022\n\n"
  "\002id\030\001 \001(\003\022\020\n\010isActive\030\002 \001(\010\"\033\n\031GetSubtit"
  "lesTracksRequest\"I\n\027GetSubtitlesTracksRe"
  "ply\022.\n\016subtitlesTrack\030\001 \003(\0132\026.player.Sub"
  "titlesTrack\"\r\n\013StopRequest\"\013\n\tStopReply\""
  "\016\n\014CloseRequest\"\014\n\nCloseReply*\303\001\n\014Loggin"
  "gLevel\022\024\n\020LoggingLevelNone\020\000\022\025\n\021LoggingL"
  "evelFatal\020\001\022\025\n\021LoggingLevelPanic\020\002\022\025\n\021Lo"
  "ggingLevelError\020\003\022\024\n\020LoggingLevelWarn\020\004\022"
  "\024\n\020LoggingLevelInfo\020\005\022\025\n\021LoggingLevelDeb"
  "ug\020\006\022\025\n\021LoggingLevelTrace\020\0072\230\013\n\006Player\0220"
  "\n\004Open\022\023.player.OpenRequest\032\021.player.Ope"
  "nReply\"\000\022W\n\021SetupForStreaming\022 .player.S"
  "etupForStreamingRequest\032\036.player.SetupFo"
  "rStreamingReply\"\000\022H\n\014ProcessTitle\022\033.play"
  "er.ProcessTitleRequest\032\031.player.ProcessT"
  "itleReply\"\000\0229\n\007GetLink\022\026.player.GetLinkR"
  "equest\032\024.player.GetLinkReply\"\000\022;\n\007EndCha"
  "n\022\026.player.EndChanRequest\032\024.player.EndCh"
  "anReply\"\0000\001\0229\n\007IsEnded\022\026.player.IsEndedR"
  "equest\032\024.player.IsEndedReply\"\000\022E\n\013GetPos"
  "ition\022\032.player.GetPositionRequest\032\030.play"
  "er.GetPositionReply\"\000\022\?\n\tGetLength\022\030.pla"
  "yer.GetLengthRequest\032\026.player.GetLengthR"
  "eply\"\000\022<\n\010GetSpeed\022\027.player.GetSpeedRequ"
  "est\032\025.player.GetSpeedReply\"\000\022<\n\010SetSpeed"
  "\022\027.player.SetSpeedRequest\032\025.player.SetSp"
  "eedReply\"\000\022<\n\010GetPause\022\027.player.GetPause"
  "Request\032\025.player.GetPauseReply\"\000\022<\n\010SetP"
  "ause\022\027.player.SetPauseRequest\032\025.player.S"
  "etPauseReply\"\000\0220\n\004Seek\022\023.player.SeekRequ"
  "est\032\021.player.SeekReply\"\000\022N\n\016GetVideoTrac"
  "ks\022\035.player.GetVideoTracksRequest\032\033.play"
  "er.GetVideoTracksReply\"\000\022N\n\016GetAudioTrac"
  "ks\022\035.player.GetAudioTracksRequest\032\033.play"
  "er.GetAudioTracksReply\"\000\022Z\n\022GetSubtitles"
  "Tracks\022!.player.GetSubtitlesTracksReques"
  "t\032\037.player.GetSubtitlesTracksReply\"\000\022K\n\r"
  "SetVideoTrack\022\034.player.SetVideoTrackRequ"
  "est\032\032.player.SetVideoTrackReply\"\000\022K\n\rSet"
  "AudioTrack\022\034.player.SetAudioTrackRequest"
  "\032\032.player.SetAudioTrackReply\"\000\022W\n\021SetSub"
  "titlesTrack\022 .player.SetSubtitlesTrackRe"
  "quest\032\036.player.SetSubtitlesTrackReply\"\000\022"
  "0\n\004Stop\022\023.player.StopRequest\032\021.player.St"
  "opReply\"\000\0223\n\005Close\022\024.player.CloseRequest"
  "\032\022.player.CloseReply\"\000BBZ@github.com/xai"
  "onaro-go/player/pkg/player/protobuf/go/p"
  "layer_grpcb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_player_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_player_2eproto = {
    false, false, 3178, descriptor_table_protodef_player_2eproto,
    "player.proto",
    &descriptor_table_player_2eproto_once, nullptr, 0, 45,
    schemas, file_default_instances, TableStruct_player_2eproto::offsets,
    file_level_metadata_player_2eproto, file_level_enum_descriptors_player_2eproto,
    file_level_service_descriptors_player_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_player_2eproto_getter() {
  return &descriptor_table_player_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_player_2eproto(&descriptor_table_player_2eproto);
namespace player {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LoggingLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_player_2eproto);
  return file_level_enum_descriptors_player_2eproto[0];
}
bool LoggingLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class SetupForStreamingRequest::_Internal {
 public:
};

SetupForStreamingRequest::SetupForStreamingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.SetupForStreamingRequest)
}
SetupForStreamingRequest::SetupForStreamingRequest(const SetupForStreamingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetupForStreamingRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.SetupForStreamingRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetupForStreamingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetupForStreamingRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetupForStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[0]);
}

// ===================================================================

class SetupForStreamingReply::_Internal {
 public:
};

SetupForStreamingReply::SetupForStreamingReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.SetupForStreamingReply)
}
SetupForStreamingReply::SetupForStreamingReply(const SetupForStreamingReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetupForStreamingReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.SetupForStreamingReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetupForStreamingReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetupForStreamingReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetupForStreamingReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[1]);
}

// ===================================================================

class ProcessTitleRequest::_Internal {
 public:
};

ProcessTitleRequest::ProcessTitleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.ProcessTitleRequest)
}
ProcessTitleRequest::ProcessTitleRequest(const ProcessTitleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ProcessTitleRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.ProcessTitleRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProcessTitleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProcessTitleRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ProcessTitleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[2]);
}

// ===================================================================

class ProcessTitleReply::_Internal {
 public:
};

ProcessTitleReply::ProcessTitleReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.ProcessTitleReply)
}
ProcessTitleReply::ProcessTitleReply(const ProcessTitleReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProcessTitleReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.title_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:player.ProcessTitleReply)
}

inline void ProcessTitleReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.title_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProcessTitleReply::~ProcessTitleReply() {
  // @@protoc_insertion_point(destructor:player.ProcessTitleReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProcessTitleReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.title_.Destroy();
}

void ProcessTitleReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProcessTitleReply::Clear() {
// @@protoc_insertion_point(message_clear_start:player.ProcessTitleReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProcessTitleReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string title = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "player.ProcessTitleReply.title"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProcessTitleReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.ProcessTitleReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "player.ProcessTitleReply.title");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_title(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.ProcessTitleReply)
  return target;
}

size_t ProcessTitleReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.ProcessTitleReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 1;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProcessTitleReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProcessTitleReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProcessTitleReply::GetClassData() const { return &_class_data_; }


void ProcessTitleReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProcessTitleReply*>(&to_msg);
  auto& from = static_cast<const ProcessTitleReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.ProcessTitleReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProcessTitleReply::CopyFrom(const ProcessTitleReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.ProcessTitleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessTitleReply::IsInitialized() const {
  return true;
}

void ProcessTitleReply::InternalSwap(ProcessTitleReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.title_, lhs_arena,
      &other->_impl_.title_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessTitleReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[3]);
}

// ===================================================================

class OpenRequest::_Internal {
 public:
};

OpenRequest::OpenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.OpenRequest)
}
OpenRequest::OpenRequest(const OpenRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OpenRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.link_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.logginglevel_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.link_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.link_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_link().empty()) {
    _this->_impl_.link_.Set(from._internal_link(), 
      _this->GetArenaForAllocation());
  }
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.logginglevel_ = from._impl_.logginglevel_;
  // @@protoc_insertion_point(copy_constructor:player.OpenRequest)
}

inline void OpenRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.link_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.logginglevel_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.link_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.link_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OpenRequest::~OpenRequest() {
  // @@protoc_insertion_point(destructor:player.OpenRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OpenRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.link_.Destroy();
  _impl_.title_.Destroy();
}

void OpenRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OpenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:player.OpenRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.link_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.logginglevel_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string link = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_link();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "player.OpenRequest.link"));
        } else
          goto handle_unusual;
        continue;
      // string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "player.OpenRequest.title"));
        } else
          goto handle_unusual;
        continue;
      // .player.LoggingLevel loggingLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_logginglevel(static_cast<::player::LoggingLevel>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.OpenRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string link = 1;
  if (!this->_internal_link().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_link().data(), static_cast<int>(this->_internal_link().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "player.OpenRequest.link");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_link(), target);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "player.OpenRequest.title");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_title(), target);
  }

  // .player.LoggingLevel loggingLevel = 3;
  if (this->_internal_logginglevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_logginglevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.OpenRequest)
  return target;
}

size_t OpenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.OpenRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string link = 1;
  if (!this->_internal_link().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_link());
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // .player.LoggingLevel loggingLevel = 3;
  if (this->_internal_logginglevel() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_logginglevel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OpenRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenRequest::GetClassData() const { return &_class_data_; }


void OpenRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OpenRequest*>(&to_msg);
  auto& from = static_cast<const OpenRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.OpenRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_link().empty()) {
    _this->_internal_set_link(from._internal_link());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (from._internal_logginglevel() != 0) {
    _this->_internal_set_logginglevel(from._internal_logginglevel());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenRequest::CopyFrom(const OpenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.OpenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenRequest::IsInitialized() const {
  return true;
}

void OpenRequest::InternalSwap(OpenRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.link_, lhs_arena,
      &other->_impl_.link_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.title_, lhs_arena,
      &other->_impl_.title_, rhs_arena
  );
  swap(_impl_.logginglevel_, other->_impl_.logginglevel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[4]);
}

// ===================================================================

class OpenReply::_Internal {
 public:
};

OpenReply::OpenReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.OpenReply)
}
OpenReply::OpenReply(const OpenReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  OpenReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.OpenReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata OpenReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[5]);
}

// ===================================================================

class GetLinkRequest::_Internal {
 public:
};

GetLinkRequest::GetLinkRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.GetLinkRequest)
}
GetLinkRequest::GetLinkRequest(const GetLinkRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetLinkRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.GetLinkRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLinkRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLinkRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetLinkRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[6]);
}

// ===================================================================

class GetLinkReply::_Internal {
 public:
};

GetLinkReply::GetLinkReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.GetLinkReply)
}
GetLinkReply::GetLinkReply(const GetLinkReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLinkReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.link_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.link_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.link_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_link().empty()) {
    _this->_impl_.link_.Set(from._internal_link(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:player.GetLinkReply)
}

inline void GetLinkReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.link_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.link_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.link_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetLinkReply::~GetLinkReply() {
  // @@protoc_insertion_point(destructor:player.GetLinkReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLinkReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.link_.Destroy();
}

void GetLinkReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLinkReply::Clear() {
// @@protoc_insertion_point(message_clear_start:player.GetLinkReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.link_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLinkReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string link = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_link();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "player.GetLinkReply.link"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLinkReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.GetLinkReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string link = 1;
  if (!this->_internal_link().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_link().data(), static_cast<int>(this->_internal_link().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "player.GetLinkReply.link");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_link(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.GetLinkReply)
  return target;
}

size_t GetLinkReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.GetLinkReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string link = 1;
  if (!this->_internal_link().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_link());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLinkReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLinkReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLinkReply::GetClassData() const { return &_class_data_; }


void GetLinkReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLinkReply*>(&to_msg);
  auto& from = static_cast<const GetLinkReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.GetLinkReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_link().empty()) {
    _this->_internal_set_link(from._internal_link());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLinkReply::CopyFrom(const GetLinkReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.GetLinkReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLinkReply::IsInitialized() const {
  return true;
}

void GetLinkReply::InternalSwap(GetLinkReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.link_, lhs_arena,
      &other->_impl_.link_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLinkReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[7]);
}

// ===================================================================

class EndChanRequest::_Internal {
 public:
};

EndChanRequest::EndChanRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.EndChanRequest)
}
EndChanRequest::EndChanRequest(const EndChanRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  EndChanRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.EndChanRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EndChanRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EndChanRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata EndChanRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[8]);
}

// ===================================================================

class EndChanReply::_Internal {
 public:
};

EndChanReply::EndChanReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.EndChanReply)
}
EndChanReply::EndChanReply(const EndChanReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  EndChanReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.EndChanReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EndChanReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EndChanReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata EndChanReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[9]);
}

// ===================================================================

class IsEndedRequest::_Internal {
 public:
};

IsEndedRequest::IsEndedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.IsEndedRequest)
}
IsEndedRequest::IsEndedRequest(const IsEndedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  IsEndedRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.IsEndedRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IsEndedRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IsEndedRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata IsEndedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[10]);
}

// ===================================================================

class IsEndedReply::_Internal {
 public:
};

IsEndedReply::IsEndedReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.IsEndedReply)
}
IsEndedReply::IsEndedReply(const IsEndedReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  IsEndedReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.isended_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.isended_ = from._impl_.isended_;
  // @@protoc_insertion_point(copy_constructor:player.IsEndedReply)
}

inline void IsEndedReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.isended_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

IsEndedReply::~IsEndedReply() {
  // @@protoc_insertion_point(destructor:player.IsEndedReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IsEndedReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IsEndedReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void IsEndedReply::Clear() {
// @@protoc_insertion_point(message_clear_start:player.IsEndedReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.isended_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsEndedReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool isEnded = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.isended_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IsEndedReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.IsEndedReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isEnded = 1;
  if (this->_internal_isended() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_isended(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.IsEndedReply)
  return target;
}

size_t IsEndedReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.IsEndedReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool isEnded = 1;
  if (this->_internal_isended() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IsEndedReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    IsEndedReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IsEndedReply::GetClassData() const { return &_class_data_; }


void IsEndedReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<IsEndedReply*>(&to_msg);
  auto& from = static_cast<const IsEndedReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.IsEndedReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_isended() != 0) {
    _this->_internal_set_isended(from._internal_isended());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IsEndedReply::CopyFrom(const IsEndedReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.IsEndedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsEndedReply::IsInitialized() const {
  return true;
}

void IsEndedReply::InternalSwap(IsEndedReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.isended_, other->_impl_.isended_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IsEndedReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[11]);
}

// ===================================================================

class GetPositionRequest::_Internal {
 public:
};

GetPositionRequest::GetPositionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.GetPositionRequest)
}
GetPositionRequest::GetPositionRequest(const GetPositionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetPositionRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.GetPositionRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPositionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPositionRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetPositionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[12]);
}

// ===================================================================

class GetPositionReply::_Internal {
 public:
};

GetPositionReply::GetPositionReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.GetPositionReply)
}
GetPositionReply::GetPositionReply(const GetPositionReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPositionReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.positionsecs_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.positionsecs_ = from._impl_.positionsecs_;
  // @@protoc_insertion_point(copy_constructor:player.GetPositionReply)
}

inline void GetPositionReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.positionsecs_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPositionReply::~GetPositionReply() {
  // @@protoc_insertion_point(destructor:player.GetPositionReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPositionReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPositionReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPositionReply::Clear() {
// @@protoc_insertion_point(message_clear_start:player.GetPositionReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.positionsecs_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPositionReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double positionSecs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.positionsecs_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPositionReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.GetPositionReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double positionSecs = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_positionsecs = this->_internal_positionsecs();
  uint64_t raw_positionsecs;
  memcpy(&raw_positionsecs, &tmp_positionsecs, sizeof(tmp_positionsecs));
  if (raw_positionsecs != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_positionsecs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.GetPositionReply)
  return target;
}

size_t GetPositionReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.GetPositionReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double positionSecs = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_positionsecs = this->_internal_positionsecs();
  uint64_t raw_positionsecs;
  memcpy(&raw_positionsecs, &tmp_positionsecs, sizeof(tmp_positionsecs));
  if (raw_positionsecs != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPositionReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPositionReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPositionReply::GetClassData() const { return &_class_data_; }


void GetPositionReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPositionReply*>(&to_msg);
  auto& from = static_cast<const GetPositionReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.GetPositionReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_positionsecs = from._internal_positionsecs();
  uint64_t raw_positionsecs;
  memcpy(&raw_positionsecs, &tmp_positionsecs, sizeof(tmp_positionsecs));
  if (raw_positionsecs != 0) {
    _this->_internal_set_positionsecs(from._internal_positionsecs());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionReply::CopyFrom(const GetPositionReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.GetPositionReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionReply::IsInitialized() const {
  return true;
}

void GetPositionReply::InternalSwap(GetPositionReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.positionsecs_, other->_impl_.positionsecs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[13]);
}

// ===================================================================

class GetLengthRequest::_Internal {
 public:
};

GetLengthRequest::GetLengthRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.GetLengthRequest)
}
GetLengthRequest::GetLengthRequest(const GetLengthRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetLengthRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.GetLengthRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLengthRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLengthRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetLengthRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[14]);
}

// ===================================================================

class GetLengthReply::_Internal {
 public:
};

GetLengthReply::GetLengthReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.GetLengthReply)
}
GetLengthReply::GetLengthReply(const GetLengthReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLengthReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lengthsecs_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.lengthsecs_ = from._impl_.lengthsecs_;
  // @@protoc_insertion_point(copy_constructor:player.GetLengthReply)
}

inline void GetLengthReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.lengthsecs_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetLengthReply::~GetLengthReply() {
  // @@protoc_insertion_point(destructor:player.GetLengthReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLengthReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetLengthReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLengthReply::Clear() {
// @@protoc_insertion_point(message_clear_start:player.GetLengthReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lengthsecs_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLengthReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double lengthSecs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.lengthsecs_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLengthReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.GetLengthReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double lengthSecs = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lengthsecs = this->_internal_lengthsecs();
  uint64_t raw_lengthsecs;
  memcpy(&raw_lengthsecs, &tmp_lengthsecs, sizeof(tmp_lengthsecs));
  if (raw_lengthsecs != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_lengthsecs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.GetLengthReply)
  return target;
}

size_t GetLengthReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.GetLengthReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double lengthSecs = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lengthsecs = this->_internal_lengthsecs();
  uint64_t raw_lengthsecs;
  memcpy(&raw_lengthsecs, &tmp_lengthsecs, sizeof(tmp_lengthsecs));
  if (raw_lengthsecs != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLengthReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLengthReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLengthReply::GetClassData() const { return &_class_data_; }


void GetLengthReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLengthReply*>(&to_msg);
  auto& from = static_cast<const GetLengthReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.GetLengthReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lengthsecs = from._internal_lengthsecs();
  uint64_t raw_lengthsecs;
  memcpy(&raw_lengthsecs, &tmp_lengthsecs, sizeof(tmp_lengthsecs));
  if (raw_lengthsecs != 0) {
    _this->_internal_set_lengthsecs(from._internal_lengthsecs());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLengthReply::CopyFrom(const GetLengthReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.GetLengthReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLengthReply::IsInitialized() const {
  return true;
}

void GetLengthReply::InternalSwap(GetLengthReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.lengthsecs_, other->_impl_.lengthsecs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLengthReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[15]);
}

// ===================================================================

class GetSpeedRequest::_Internal {
 public:
};

GetSpeedRequest::GetSpeedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.GetSpeedRequest)
}
GetSpeedRequest::GetSpeedRequest(const GetSpeedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetSpeedRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.GetSpeedRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSpeedRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSpeedRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetSpeedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[16]);
}

// ===================================================================

class GetSpeedReply::_Internal {
 public:
};

GetSpeedReply::GetSpeedReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.GetSpeedReply)
}
GetSpeedReply::GetSpeedReply(const GetSpeedReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSpeedReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.speed_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.speed_ = from._impl_.speed_;
  // @@protoc_insertion_point(copy_constructor:player.GetSpeedReply)
}

inline void GetSpeedReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.speed_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSpeedReply::~GetSpeedReply() {
  // @@protoc_insertion_point(destructor:player.GetSpeedReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSpeedReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetSpeedReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSpeedReply::Clear() {
// @@protoc_insertion_point(message_clear_start:player.GetSpeedReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.speed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSpeedReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double speed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSpeedReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.GetSpeedReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double speed = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_speed = this->_internal_speed();
  uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.GetSpeedReply)
  return target;
}

size_t GetSpeedReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.GetSpeedReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double speed = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_speed = this->_internal_speed();
  uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSpeedReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSpeedReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSpeedReply::GetClassData() const { return &_class_data_; }


void GetSpeedReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSpeedReply*>(&to_msg);
  auto& from = static_cast<const GetSpeedReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.GetSpeedReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_speed = from._internal_speed();
  uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSpeedReply::CopyFrom(const GetSpeedReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.GetSpeedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSpeedReply::IsInitialized() const {
  return true;
}

void GetSpeedReply::InternalSwap(GetSpeedReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.speed_, other->_impl_.speed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSpeedReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[17]);
}

// ===================================================================

class SetSpeedRequest::_Internal {
 public:
};

SetSpeedRequest::SetSpeedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.SetSpeedRequest)
}
SetSpeedRequest::SetSpeedRequest(const SetSpeedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetSpeedRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.speed_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.speed_ = from._impl_.speed_;
  // @@protoc_insertion_point(copy_constructor:player.SetSpeedRequest)
}

inline void SetSpeedRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.speed_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetSpeedRequest::~SetSpeedRequest() {
  // @@protoc_insertion_point(destructor:player.SetSpeedRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetSpeedRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetSpeedRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetSpeedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:player.SetSpeedRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.speed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetSpeedRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double speed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetSpeedRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.SetSpeedRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double speed = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_speed = this->_internal_speed();
  uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.SetSpeedRequest)
  return target;
}

size_t SetSpeedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.SetSpeedRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double speed = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_speed = this->_internal_speed();
  uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetSpeedRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetSpeedRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetSpeedRequest::GetClassData() const { return &_class_data_; }


void SetSpeedRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetSpeedRequest*>(&to_msg);
  auto& from = static_cast<const SetSpeedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.SetSpeedRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_speed = from._internal_speed();
  uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetSpeedRequest::CopyFrom(const SetSpeedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.SetSpeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSpeedRequest::IsInitialized() const {
  return true;
}

void SetSpeedRequest::InternalSwap(SetSpeedRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.speed_, other->_impl_.speed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetSpeedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[18]);
}

// ===================================================================

class SetSpeedReply::_Internal {
 public:
};

SetSpeedReply::SetSpeedReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.SetSpeedReply)
}
SetSpeedReply::SetSpeedReply(const SetSpeedReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetSpeedReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.SetSpeedReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetSpeedReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetSpeedReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetSpeedReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[19]);
}

// ===================================================================

class GetPauseRequest::_Internal {
 public:
};

GetPauseRequest::GetPauseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.GetPauseRequest)
}
GetPauseRequest::GetPauseRequest(const GetPauseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetPauseRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.GetPauseRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPauseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPauseRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetPauseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[20]);
}

// ===================================================================

class GetPauseReply::_Internal {
 public:
};

GetPauseReply::GetPauseReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.GetPauseReply)
}
GetPauseReply::GetPauseReply(const GetPauseReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPauseReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ispaused_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ispaused_ = from._impl_.ispaused_;
  // @@protoc_insertion_point(copy_constructor:player.GetPauseReply)
}

inline void GetPauseReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ispaused_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPauseReply::~GetPauseReply() {
  // @@protoc_insertion_point(destructor:player.GetPauseReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPauseReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPauseReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPauseReply::Clear() {
// @@protoc_insertion_point(message_clear_start:player.GetPauseReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ispaused_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPauseReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool isPaused = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ispaused_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPauseReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.GetPauseReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isPaused = 1;
  if (this->_internal_ispaused() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ispaused(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.GetPauseReply)
  return target;
}

size_t GetPauseReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.GetPauseReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool isPaused = 1;
  if (this->_internal_ispaused() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPauseReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPauseReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPauseReply::GetClassData() const { return &_class_data_; }


void GetPauseReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPauseReply*>(&to_msg);
  auto& from = static_cast<const GetPauseReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.GetPauseReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ispaused() != 0) {
    _this->_internal_set_ispaused(from._internal_ispaused());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPauseReply::CopyFrom(const GetPauseReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.GetPauseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPauseReply::IsInitialized() const {
  return true;
}

void GetPauseReply::InternalSwap(GetPauseReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ispaused_, other->_impl_.ispaused_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPauseReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[21]);
}

// ===================================================================

class SetPauseRequest::_Internal {
 public:
};

SetPauseRequest::SetPauseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.SetPauseRequest)
}
SetPauseRequest::SetPauseRequest(const SetPauseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetPauseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ispaused_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ispaused_ = from._impl_.ispaused_;
  // @@protoc_insertion_point(copy_constructor:player.SetPauseRequest)
}

inline void SetPauseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ispaused_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetPauseRequest::~SetPauseRequest() {
  // @@protoc_insertion_point(destructor:player.SetPauseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetPauseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetPauseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetPauseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:player.SetPauseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ispaused_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPauseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool isPaused = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ispaused_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetPauseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.SetPauseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isPaused = 1;
  if (this->_internal_ispaused() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ispaused(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.SetPauseRequest)
  return target;
}

size_t SetPauseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.SetPauseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool isPaused = 1;
  if (this->_internal_ispaused() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPauseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetPauseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPauseRequest::GetClassData() const { return &_class_data_; }


void SetPauseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetPauseRequest*>(&to_msg);
  auto& from = static_cast<const SetPauseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.SetPauseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ispaused() != 0) {
    _this->_internal_set_ispaused(from._internal_ispaused());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetPauseRequest::CopyFrom(const SetPauseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.SetPauseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPauseRequest::IsInitialized() const {
  return true;
}

void SetPauseRequest::InternalSwap(SetPauseRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ispaused_, other->_impl_.ispaused_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPauseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[22]);
}

// ===================================================================

class SetPauseReply::_Internal {
 public:
};

SetPauseReply::SetPauseReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.SetPauseReply)
}
SetPauseReply::SetPauseReply(const SetPauseReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetPauseReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.SetPauseReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPauseReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPauseReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetPauseReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[23]);
}

// ===================================================================

class SetVideoTrackRequest::_Internal {
 public:
};

SetVideoTrackRequest::SetVideoTrackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.SetVideoTrackRequest)
}
SetVideoTrackRequest::SetVideoTrackRequest(const SetVideoTrackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetVideoTrackRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.videotrackid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.videotrackid_ = from._impl_.videotrackid_;
  // @@protoc_insertion_point(copy_constructor:player.SetVideoTrackRequest)
}

inline void SetVideoTrackRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.videotrackid_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetVideoTrackRequest::~SetVideoTrackRequest() {
  // @@protoc_insertion_point(destructor:player.SetVideoTrackRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetVideoTrackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetVideoTrackRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetVideoTrackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:player.SetVideoTrackRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.videotrackid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVideoTrackRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 videoTrackID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.videotrackid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetVideoTrackRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.SetVideoTrackRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 videoTrackID = 1;
  if (this->_internal_videotrackid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_videotrackid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.SetVideoTrackRequest)
  return target;
}

size_t SetVideoTrackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.SetVideoTrackRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 videoTrackID = 1;
  if (this->_internal_videotrackid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_videotrackid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetVideoTrackRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetVideoTrackRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetVideoTrackRequest::GetClassData() const { return &_class_data_; }


void SetVideoTrackRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetVideoTrackRequest*>(&to_msg);
  auto& from = static_cast<const SetVideoTrackRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.SetVideoTrackRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_videotrackid() != 0) {
    _this->_internal_set_videotrackid(from._internal_videotrackid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetVideoTrackRequest::CopyFrom(const SetVideoTrackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.SetVideoTrackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVideoTrackRequest::IsInitialized() const {
  return true;
}

void SetVideoTrackRequest::InternalSwap(SetVideoTrackRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.videotrackid_, other->_impl_.videotrackid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVideoTrackRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[24]);
}

// ===================================================================

class SetVideoTrackReply::_Internal {
 public:
};

SetVideoTrackReply::SetVideoTrackReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.SetVideoTrackReply)
}
SetVideoTrackReply::SetVideoTrackReply(const SetVideoTrackReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetVideoTrackReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.SetVideoTrackReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetVideoTrackReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetVideoTrackReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetVideoTrackReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[25]);
}

// ===================================================================

class SetAudioTrackRequest::_Internal {
 public:
};

SetAudioTrackRequest::SetAudioTrackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.SetAudioTrackRequest)
}
SetAudioTrackRequest::SetAudioTrackRequest(const SetAudioTrackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetAudioTrackRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.audiotrackid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.audiotrackid_ = from._impl_.audiotrackid_;
  // @@protoc_insertion_point(copy_constructor:player.SetAudioTrackRequest)
}

inline void SetAudioTrackRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.audiotrackid_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetAudioTrackRequest::~SetAudioTrackRequest() {
  // @@protoc_insertion_point(destructor:player.SetAudioTrackRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetAudioTrackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetAudioTrackRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetAudioTrackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:player.SetAudioTrackRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.audiotrackid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAudioTrackRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 audioTrackID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.audiotrackid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetAudioTrackRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.SetAudioTrackRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 audioTrackID = 1;
  if (this->_internal_audiotrackid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_audiotrackid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.SetAudioTrackRequest)
  return target;
}

size_t SetAudioTrackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.SetAudioTrackRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 audioTrackID = 1;
  if (this->_internal_audiotrackid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_audiotrackid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAudioTrackRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetAudioTrackRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAudioTrackRequest::GetClassData() const { return &_class_data_; }


void SetAudioTrackRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetAudioTrackRequest*>(&to_msg);
  auto& from = static_cast<const SetAudioTrackRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.SetAudioTrackRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_audiotrackid() != 0) {
    _this->_internal_set_audiotrackid(from._internal_audiotrackid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAudioTrackRequest::CopyFrom(const SetAudioTrackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.SetAudioTrackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAudioTrackRequest::IsInitialized() const {
  return true;
}

void SetAudioTrackRequest::InternalSwap(SetAudioTrackRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.audiotrackid_, other->_impl_.audiotrackid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAudioTrackRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[26]);
}

// ===================================================================

class SetAudioTrackReply::_Internal {
 public:
};

SetAudioTrackReply::SetAudioTrackReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.SetAudioTrackReply)
}
SetAudioTrackReply::SetAudioTrackReply(const SetAudioTrackReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetAudioTrackReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.SetAudioTrackReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAudioTrackReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAudioTrackReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetAudioTrackReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[27]);
}

// ===================================================================

class SetSubtitlesTrackRequest::_Internal {
 public:
};

SetSubtitlesTrackRequest::SetSubtitlesTrackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.SetSubtitlesTrackRequest)
}
SetSubtitlesTrackRequest::SetSubtitlesTrackRequest(const SetSubtitlesTrackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetSubtitlesTrackRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.subtitlestrackid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.subtitlestrackid_ = from._impl_.subtitlestrackid_;
  // @@protoc_insertion_point(copy_constructor:player.SetSubtitlesTrackRequest)
}

inline void SetSubtitlesTrackRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.subtitlestrackid_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetSubtitlesTrackRequest::~SetSubtitlesTrackRequest() {
  // @@protoc_insertion_point(destructor:player.SetSubtitlesTrackRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetSubtitlesTrackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetSubtitlesTrackRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetSubtitlesTrackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:player.SetSubtitlesTrackRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subtitlestrackid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetSubtitlesTrackRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 subtitlesTrackID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.subtitlestrackid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetSubtitlesTrackRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.SetSubtitlesTrackRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 subtitlesTrackID = 1;
  if (this->_internal_subtitlestrackid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_subtitlestrackid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.SetSubtitlesTrackRequest)
  return target;
}

size_t SetSubtitlesTrackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.SetSubtitlesTrackRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 subtitlesTrackID = 1;
  if (this->_internal_subtitlestrackid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_subtitlestrackid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetSubtitlesTrackRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetSubtitlesTrackRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetSubtitlesTrackRequest::GetClassData() const { return &_class_data_; }


void SetSubtitlesTrackRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetSubtitlesTrackRequest*>(&to_msg);
  auto& from = static_cast<const SetSubtitlesTrackRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.SetSubtitlesTrackRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_subtitlestrackid() != 0) {
    _this->_internal_set_subtitlestrackid(from._internal_subtitlestrackid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetSubtitlesTrackRequest::CopyFrom(const SetSubtitlesTrackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.SetSubtitlesTrackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSubtitlesTrackRequest::IsInitialized() const {
  return true;
}

void SetSubtitlesTrackRequest::InternalSwap(SetSubtitlesTrackRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.subtitlestrackid_, other->_impl_.subtitlestrackid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetSubtitlesTrackRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[28]);
}

// ===================================================================

class SetSubtitlesTrackReply::_Internal {
 public:
};

SetSubtitlesTrackReply::SetSubtitlesTrackReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.SetSubtitlesTrackReply)
}
SetSubtitlesTrackReply::SetSubtitlesTrackReply(const SetSubtitlesTrackReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetSubtitlesTrackReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.SetSubtitlesTrackReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetSubtitlesTrackReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetSubtitlesTrackReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetSubtitlesTrackReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[29]);
}

// ===================================================================

class VideoTrack::_Internal {
 public:
};

VideoTrack::VideoTrack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.VideoTrack)
}
VideoTrack::VideoTrack(const VideoTrack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VideoTrack* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.isactive_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.isactive_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.isactive_));
  // @@protoc_insertion_point(copy_constructor:player.VideoTrack)
}

inline void VideoTrack::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){int64_t{0}}
    , decltype(_impl_.isactive_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VideoTrack::~VideoTrack() {
  // @@protoc_insertion_point(destructor:player.VideoTrack)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VideoTrack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VideoTrack::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VideoTrack::Clear() {
// @@protoc_insertion_point(message_clear_start:player.VideoTrack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.isactive_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.isactive_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VideoTrack::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isActive = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.isactive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VideoTrack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.VideoTrack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // bool isActive = 2;
  if (this->_internal_isactive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_isactive(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.VideoTrack)
  return target;
}

size_t VideoTrack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.VideoTrack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // bool isActive = 2;
  if (this->_internal_isactive() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VideoTrack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VideoTrack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VideoTrack::GetClassData() const { return &_class_data_; }


void VideoTrack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VideoTrack*>(&to_msg);
  auto& from = static_cast<const VideoTrack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.VideoTrack)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_isactive() != 0) {
    _this->_internal_set_isactive(from._internal_isactive());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VideoTrack::CopyFrom(const VideoTrack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.VideoTrack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoTrack::IsInitialized() const {
  return true;
}

void VideoTrack::InternalSwap(VideoTrack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VideoTrack, _impl_.isactive_)
      + sizeof(VideoTrack::_impl_.isactive_)
      - PROTOBUF_FIELD_OFFSET(VideoTrack, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VideoTrack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[30]);
}

// ===================================================================

class SeekRequest::_Internal {
 public:
};

SeekRequest::SeekRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.SeekRequest)
}
SeekRequest::SeekRequest(const SeekRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SeekRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pos_){}
    , decltype(_impl_.isrelative_){}
    , decltype(_impl_.isquick_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.pos_, &from._impl_.pos_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.isquick_) -
    reinterpret_cast<char*>(&_impl_.pos_)) + sizeof(_impl_.isquick_));
  // @@protoc_insertion_point(copy_constructor:player.SeekRequest)
}

inline void SeekRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pos_){int64_t{0}}
    , decltype(_impl_.isrelative_){false}
    , decltype(_impl_.isquick_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SeekRequest::~SeekRequest() {
  // @@protoc_insertion_point(destructor:player.SeekRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SeekRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SeekRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SeekRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:player.SeekRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.isquick_) -
      reinterpret_cast<char*>(&_impl_.pos_)) + sizeof(_impl_.isquick_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SeekRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 pos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.pos_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isRelative = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.isrelative_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isQuick = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.isquick_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SeekRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.SeekRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 pos = 1;
  if (this->_internal_pos() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_pos(), target);
  }

  // bool isRelative = 2;
  if (this->_internal_isrelative() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_isrelative(), target);
  }

  // bool isQuick = 3;
  if (this->_internal_isquick() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_isquick(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.SeekRequest)
  return target;
}

size_t SeekRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.SeekRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 pos = 1;
  if (this->_internal_pos() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_pos());
  }

  // bool isRelative = 2;
  if (this->_internal_isrelative() != 0) {
    total_size += 1 + 1;
  }

  // bool isQuick = 3;
  if (this->_internal_isquick() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SeekRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SeekRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SeekRequest::GetClassData() const { return &_class_data_; }


void SeekRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SeekRequest*>(&to_msg);
  auto& from = static_cast<const SeekRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.SeekRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_pos() != 0) {
    _this->_internal_set_pos(from._internal_pos());
  }
  if (from._internal_isrelative() != 0) {
    _this->_internal_set_isrelative(from._internal_isrelative());
  }
  if (from._internal_isquick() != 0) {
    _this->_internal_set_isquick(from._internal_isquick());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SeekRequest::CopyFrom(const SeekRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.SeekRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeekRequest::IsInitialized() const {
  return true;
}

void SeekRequest::InternalSwap(SeekRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SeekRequest, _impl_.isquick_)
      + sizeof(SeekRequest::_impl_.isquick_)
      - PROTOBUF_FIELD_OFFSET(SeekRequest, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SeekRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[31]);
}

// ===================================================================

class SeekReply::_Internal {
 public:
};

SeekReply::SeekReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.SeekReply)
}
SeekReply::SeekReply(const SeekReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SeekReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.SeekReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SeekReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SeekReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SeekReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[32]);
}

// ===================================================================

class GetVideoTracksRequest::_Internal {
 public:
};

GetVideoTracksRequest::GetVideoTracksRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.GetVideoTracksRequest)
}
GetVideoTracksRequest::GetVideoTracksRequest(const GetVideoTracksRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetVideoTracksRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.GetVideoTracksRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVideoTracksRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVideoTracksRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetVideoTracksRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[33]);
}

// ===================================================================

class GetVideoTracksReply::_Internal {
 public:
};

GetVideoTracksReply::GetVideoTracksReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.GetVideoTracksReply)
}
GetVideoTracksReply::GetVideoTracksReply(const GetVideoTracksReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVideoTracksReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.videotrack_){from._impl_.videotrack_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.GetVideoTracksReply)
}

inline void GetVideoTracksReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.videotrack_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetVideoTracksReply::~GetVideoTracksReply() {
  // @@protoc_insertion_point(destructor:player.GetVideoTracksReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVideoTracksReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.videotrack_.~RepeatedPtrField();
}

void GetVideoTracksReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVideoTracksReply::Clear() {
// @@protoc_insertion_point(message_clear_start:player.GetVideoTracksReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.videotrack_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVideoTracksReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .player.VideoTrack videoTrack = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_videotrack(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVideoTracksReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.GetVideoTracksReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .player.VideoTrack videoTrack = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_videotrack_size()); i < n; i++) {
    const auto& repfield = this->_internal_videotrack(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.GetVideoTracksReply)
  return target;
}

size_t GetVideoTracksReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.GetVideoTracksReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .player.VideoTrack videoTrack = 1;
  total_size += 1UL * this->_internal_videotrack_size();
  for (const auto& msg : this->_impl_.videotrack_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVideoTracksReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVideoTracksReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVideoTracksReply::GetClassData() const { return &_class_data_; }


void GetVideoTracksReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVideoTracksReply*>(&to_msg);
  auto& from = static_cast<const GetVideoTracksReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.GetVideoTracksReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.videotrack_.MergeFrom(from._impl_.videotrack_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVideoTracksReply::CopyFrom(const GetVideoTracksReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.GetVideoTracksReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVideoTracksReply::IsInitialized() const {
  return true;
}

void GetVideoTracksReply::InternalSwap(GetVideoTracksReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.videotrack_.InternalSwap(&other->_impl_.videotrack_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVideoTracksReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[34]);
}

// ===================================================================

class AudioTrack::_Internal {
 public:
};

AudioTrack::AudioTrack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.AudioTrack)
}
AudioTrack::AudioTrack(const AudioTrack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AudioTrack* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.isactive_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.isactive_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.isactive_));
  // @@protoc_insertion_point(copy_constructor:player.AudioTrack)
}

inline void AudioTrack::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){int64_t{0}}
    , decltype(_impl_.isactive_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AudioTrack::~AudioTrack() {
  // @@protoc_insertion_point(destructor:player.AudioTrack)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AudioTrack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AudioTrack::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AudioTrack::Clear() {
// @@protoc_insertion_point(message_clear_start:player.AudioTrack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.isactive_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.isactive_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AudioTrack::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isActive = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.isactive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AudioTrack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.AudioTrack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // bool isActive = 2;
  if (this->_internal_isactive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_isactive(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.AudioTrack)
  return target;
}

size_t AudioTrack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.AudioTrack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // bool isActive = 2;
  if (this->_internal_isactive() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AudioTrack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AudioTrack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AudioTrack::GetClassData() const { return &_class_data_; }


void AudioTrack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AudioTrack*>(&to_msg);
  auto& from = static_cast<const AudioTrack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.AudioTrack)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_isactive() != 0) {
    _this->_internal_set_isactive(from._internal_isactive());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AudioTrack::CopyFrom(const AudioTrack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.AudioTrack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioTrack::IsInitialized() const {
  return true;
}

void AudioTrack::InternalSwap(AudioTrack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AudioTrack, _impl_.isactive_)
      + sizeof(AudioTrack::_impl_.isactive_)
      - PROTOBUF_FIELD_OFFSET(AudioTrack, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AudioTrack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[35]);
}

// ===================================================================

class GetAudioTracksRequest::_Internal {
 public:
};

GetAudioTracksRequest::GetAudioTracksRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.GetAudioTracksRequest)
}
GetAudioTracksRequest::GetAudioTracksRequest(const GetAudioTracksRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetAudioTracksRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.GetAudioTracksRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAudioTracksRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAudioTracksRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetAudioTracksRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[36]);
}

// ===================================================================

class GetAudioTracksReply::_Internal {
 public:
};

GetAudioTracksReply::GetAudioTracksReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.GetAudioTracksReply)
}
GetAudioTracksReply::GetAudioTracksReply(const GetAudioTracksReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAudioTracksReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.audiotrack_){from._impl_.audiotrack_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.GetAudioTracksReply)
}

inline void GetAudioTracksReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.audiotrack_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAudioTracksReply::~GetAudioTracksReply() {
  // @@protoc_insertion_point(destructor:player.GetAudioTracksReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAudioTracksReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.audiotrack_.~RepeatedPtrField();
}

void GetAudioTracksReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAudioTracksReply::Clear() {
// @@protoc_insertion_point(message_clear_start:player.GetAudioTracksReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.audiotrack_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAudioTracksReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .player.AudioTrack audioTrack = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_audiotrack(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAudioTracksReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.GetAudioTracksReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .player.AudioTrack audioTrack = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_audiotrack_size()); i < n; i++) {
    const auto& repfield = this->_internal_audiotrack(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.GetAudioTracksReply)
  return target;
}

size_t GetAudioTracksReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.GetAudioTracksReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .player.AudioTrack audioTrack = 1;
  total_size += 1UL * this->_internal_audiotrack_size();
  for (const auto& msg : this->_impl_.audiotrack_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAudioTracksReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAudioTracksReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAudioTracksReply::GetClassData() const { return &_class_data_; }


void GetAudioTracksReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAudioTracksReply*>(&to_msg);
  auto& from = static_cast<const GetAudioTracksReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.GetAudioTracksReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.audiotrack_.MergeFrom(from._impl_.audiotrack_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAudioTracksReply::CopyFrom(const GetAudioTracksReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.GetAudioTracksReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAudioTracksReply::IsInitialized() const {
  return true;
}

void GetAudioTracksReply::InternalSwap(GetAudioTracksReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.audiotrack_.InternalSwap(&other->_impl_.audiotrack_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAudioTracksReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[37]);
}

// ===================================================================

class SubtitlesTrack::_Internal {
 public:
};

SubtitlesTrack::SubtitlesTrack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.SubtitlesTrack)
}
SubtitlesTrack::SubtitlesTrack(const SubtitlesTrack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SubtitlesTrack* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.isactive_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.isactive_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.isactive_));
  // @@protoc_insertion_point(copy_constructor:player.SubtitlesTrack)
}

inline void SubtitlesTrack::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){int64_t{0}}
    , decltype(_impl_.isactive_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SubtitlesTrack::~SubtitlesTrack() {
  // @@protoc_insertion_point(destructor:player.SubtitlesTrack)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SubtitlesTrack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SubtitlesTrack::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SubtitlesTrack::Clear() {
// @@protoc_insertion_point(message_clear_start:player.SubtitlesTrack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.isactive_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.isactive_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtitlesTrack::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isActive = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.isactive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubtitlesTrack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.SubtitlesTrack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // bool isActive = 2;
  if (this->_internal_isactive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_isactive(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.SubtitlesTrack)
  return target;
}

size_t SubtitlesTrack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.SubtitlesTrack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // bool isActive = 2;
  if (this->_internal_isactive() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubtitlesTrack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SubtitlesTrack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubtitlesTrack::GetClassData() const { return &_class_data_; }


void SubtitlesTrack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SubtitlesTrack*>(&to_msg);
  auto& from = static_cast<const SubtitlesTrack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.SubtitlesTrack)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_isactive() != 0) {
    _this->_internal_set_isactive(from._internal_isactive());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubtitlesTrack::CopyFrom(const SubtitlesTrack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.SubtitlesTrack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtitlesTrack::IsInitialized() const {
  return true;
}

void SubtitlesTrack::InternalSwap(SubtitlesTrack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubtitlesTrack, _impl_.isactive_)
      + sizeof(SubtitlesTrack::_impl_.isactive_)
      - PROTOBUF_FIELD_OFFSET(SubtitlesTrack, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtitlesTrack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[38]);
}

// ===================================================================

class GetSubtitlesTracksRequest::_Internal {
 public:
};

GetSubtitlesTracksRequest::GetSubtitlesTracksRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.GetSubtitlesTracksRequest)
}
GetSubtitlesTracksRequest::GetSubtitlesTracksRequest(const GetSubtitlesTracksRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetSubtitlesTracksRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.GetSubtitlesTracksRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSubtitlesTracksRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSubtitlesTracksRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetSubtitlesTracksRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[39]);
}

// ===================================================================

class GetSubtitlesTracksReply::_Internal {
 public:
};

GetSubtitlesTracksReply::GetSubtitlesTracksReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:player.GetSubtitlesTracksReply)
}
GetSubtitlesTracksReply::GetSubtitlesTracksReply(const GetSubtitlesTracksReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSubtitlesTracksReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.subtitlestrack_){from._impl_.subtitlestrack_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.GetSubtitlesTracksReply)
}

inline void GetSubtitlesTracksReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.subtitlestrack_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSubtitlesTracksReply::~GetSubtitlesTracksReply() {
  // @@protoc_insertion_point(destructor:player.GetSubtitlesTracksReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSubtitlesTracksReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.subtitlestrack_.~RepeatedPtrField();
}

void GetSubtitlesTracksReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSubtitlesTracksReply::Clear() {
// @@protoc_insertion_point(message_clear_start:player.GetSubtitlesTracksReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subtitlestrack_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSubtitlesTracksReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .player.SubtitlesTrack subtitlesTrack = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subtitlestrack(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSubtitlesTracksReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player.GetSubtitlesTracksReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .player.SubtitlesTrack subtitlesTrack = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_subtitlestrack_size()); i < n; i++) {
    const auto& repfield = this->_internal_subtitlestrack(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player.GetSubtitlesTracksReply)
  return target;
}

size_t GetSubtitlesTracksReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player.GetSubtitlesTracksReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .player.SubtitlesTrack subtitlesTrack = 1;
  total_size += 1UL * this->_internal_subtitlestrack_size();
  for (const auto& msg : this->_impl_.subtitlestrack_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSubtitlesTracksReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSubtitlesTracksReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSubtitlesTracksReply::GetClassData() const { return &_class_data_; }


void GetSubtitlesTracksReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSubtitlesTracksReply*>(&to_msg);
  auto& from = static_cast<const GetSubtitlesTracksReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player.GetSubtitlesTracksReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.subtitlestrack_.MergeFrom(from._impl_.subtitlestrack_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSubtitlesTracksReply::CopyFrom(const GetSubtitlesTracksReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player.GetSubtitlesTracksReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSubtitlesTracksReply::IsInitialized() const {
  return true;
}

void GetSubtitlesTracksReply::InternalSwap(GetSubtitlesTracksReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.subtitlestrack_.InternalSwap(&other->_impl_.subtitlestrack_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSubtitlesTracksReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[40]);
}

// ===================================================================

class StopRequest::_Internal {
 public:
};

StopRequest::StopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.StopRequest)
}
StopRequest::StopRequest(const StopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StopRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.StopRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[41]);
}

// ===================================================================

class StopReply::_Internal {
 public:
};

StopReply::StopReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.StopReply)
}
StopReply::StopReply(const StopReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StopReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.StopReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StopReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[42]);
}

// ===================================================================

class CloseRequest::_Internal {
 public:
};

CloseRequest::CloseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.CloseRequest)
}
CloseRequest::CloseRequest(const CloseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CloseRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.CloseRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CloseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CloseRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CloseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[43]);
}

// ===================================================================

class CloseReply::_Internal {
 public:
};

CloseReply::CloseReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:player.CloseReply)
}
CloseReply::CloseReply(const CloseReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CloseReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player.CloseReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CloseReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CloseReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CloseReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_player_2eproto_getter, &descriptor_table_player_2eproto_once,
      file_level_metadata_player_2eproto[44]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace player
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::player::SetupForStreamingRequest*
Arena::CreateMaybeMessage< ::player::SetupForStreamingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetupForStreamingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SetupForStreamingReply*
Arena::CreateMaybeMessage< ::player::SetupForStreamingReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetupForStreamingReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::ProcessTitleRequest*
Arena::CreateMaybeMessage< ::player::ProcessTitleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::ProcessTitleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::ProcessTitleReply*
Arena::CreateMaybeMessage< ::player::ProcessTitleReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::ProcessTitleReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::OpenRequest*
Arena::CreateMaybeMessage< ::player::OpenRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::OpenRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::OpenReply*
Arena::CreateMaybeMessage< ::player::OpenReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::OpenReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetLinkRequest*
Arena::CreateMaybeMessage< ::player::GetLinkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetLinkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetLinkReply*
Arena::CreateMaybeMessage< ::player::GetLinkReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetLinkReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::EndChanRequest*
Arena::CreateMaybeMessage< ::player::EndChanRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::EndChanRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::EndChanReply*
Arena::CreateMaybeMessage< ::player::EndChanReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::EndChanReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::IsEndedRequest*
Arena::CreateMaybeMessage< ::player::IsEndedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::IsEndedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::IsEndedReply*
Arena::CreateMaybeMessage< ::player::IsEndedReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::IsEndedReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetPositionRequest*
Arena::CreateMaybeMessage< ::player::GetPositionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetPositionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetPositionReply*
Arena::CreateMaybeMessage< ::player::GetPositionReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetPositionReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetLengthRequest*
Arena::CreateMaybeMessage< ::player::GetLengthRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetLengthRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetLengthReply*
Arena::CreateMaybeMessage< ::player::GetLengthReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetLengthReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetSpeedRequest*
Arena::CreateMaybeMessage< ::player::GetSpeedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetSpeedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetSpeedReply*
Arena::CreateMaybeMessage< ::player::GetSpeedReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetSpeedReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SetSpeedRequest*
Arena::CreateMaybeMessage< ::player::SetSpeedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetSpeedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SetSpeedReply*
Arena::CreateMaybeMessage< ::player::SetSpeedReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetSpeedReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetPauseRequest*
Arena::CreateMaybeMessage< ::player::GetPauseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetPauseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetPauseReply*
Arena::CreateMaybeMessage< ::player::GetPauseReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetPauseReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SetPauseRequest*
Arena::CreateMaybeMessage< ::player::SetPauseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetPauseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SetPauseReply*
Arena::CreateMaybeMessage< ::player::SetPauseReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetPauseReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SetVideoTrackRequest*
Arena::CreateMaybeMessage< ::player::SetVideoTrackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetVideoTrackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SetVideoTrackReply*
Arena::CreateMaybeMessage< ::player::SetVideoTrackReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetVideoTrackReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SetAudioTrackRequest*
Arena::CreateMaybeMessage< ::player::SetAudioTrackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetAudioTrackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SetAudioTrackReply*
Arena::CreateMaybeMessage< ::player::SetAudioTrackReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetAudioTrackReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SetSubtitlesTrackRequest*
Arena::CreateMaybeMessage< ::player::SetSubtitlesTrackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetSubtitlesTrackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SetSubtitlesTrackReply*
Arena::CreateMaybeMessage< ::player::SetSubtitlesTrackReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SetSubtitlesTrackReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::VideoTrack*
Arena::CreateMaybeMessage< ::player::VideoTrack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::VideoTrack >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SeekRequest*
Arena::CreateMaybeMessage< ::player::SeekRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SeekRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SeekReply*
Arena::CreateMaybeMessage< ::player::SeekReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SeekReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetVideoTracksRequest*
Arena::CreateMaybeMessage< ::player::GetVideoTracksRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetVideoTracksRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetVideoTracksReply*
Arena::CreateMaybeMessage< ::player::GetVideoTracksReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetVideoTracksReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::AudioTrack*
Arena::CreateMaybeMessage< ::player::AudioTrack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::AudioTrack >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetAudioTracksRequest*
Arena::CreateMaybeMessage< ::player::GetAudioTracksRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetAudioTracksRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetAudioTracksReply*
Arena::CreateMaybeMessage< ::player::GetAudioTracksReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetAudioTracksReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::SubtitlesTrack*
Arena::CreateMaybeMessage< ::player::SubtitlesTrack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::SubtitlesTrack >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetSubtitlesTracksRequest*
Arena::CreateMaybeMessage< ::player::GetSubtitlesTracksRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetSubtitlesTracksRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::GetSubtitlesTracksReply*
Arena::CreateMaybeMessage< ::player::GetSubtitlesTracksReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::GetSubtitlesTracksReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::StopRequest*
Arena::CreateMaybeMessage< ::player::StopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::StopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::StopReply*
Arena::CreateMaybeMessage< ::player::StopReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::StopReply >(arena);
}
template<> PROTOBUF_NOINLINE ::player::CloseRequest*
Arena::CreateMaybeMessage< ::player::CloseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::CloseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::player::CloseReply*
Arena::CreateMaybeMessage< ::player::CloseReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::player::CloseReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
